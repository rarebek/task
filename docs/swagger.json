{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/v1/customer/create": {
            "post": {
                "description": "Creates a new customer in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Create a new customer",
                "parameters": [
                    {
                        "description": "Customer information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.Customer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created customer",
                        "schema": {
                            "$ref": "#/definitions/storage.Customer"
                        }
                    },
                    "400": {
                        "description": "Invalid customer data",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/customer/delete/{id}": {
            "delete": {
                "description": "Soft deletes a customer from the database",
                "tags": [
                    "customers"
                ],
                "summary": "Delete a customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid customer ID",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/customer/update/{id}": {
            "put": {
                "description": "Updates an existing customer in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Update an existing customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Customer information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.Customer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated customer",
                        "schema": {
                            "$ref": "#/definitions/storage.Customer"
                        }
                    },
                    "400": {
                        "description": "Invalid customer data",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/customer/{id}": {
            "get": {
                "description": "Retrieves a single customer by its ID from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Get a single customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer details",
                        "schema": {
                            "$ref": "#/definitions/storage.Customer"
                        }
                    },
                    "400": {
                        "description": "Invalid customer ID",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Customer not found",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/customers": {
            "get": {
                "description": "Retrieves all customers from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Get all customers",
                "responses": {
                    "200": {
                        "description": "List of customers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/storage.Customer"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/item/create": {
            "post": {
                "description": "Creates a new item in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Create a new item",
                "parameters": [
                    {
                        "description": "Item information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.Item"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created item",
                        "schema": {
                            "$ref": "#/definitions/storage.Item"
                        }
                    },
                    "400": {
                        "description": "Invalid item data",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/item/delete/{id}": {
            "delete": {
                "description": "Soft deletes an item from the database",
                "tags": [
                    "items"
                ],
                "summary": "Delete an item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid item ID",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/item/update/{id}": {
            "put": {
                "description": "Updates an existing item in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Update an existing item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Item information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.Item"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated item",
                        "schema": {
                            "$ref": "#/definitions/storage.Item"
                        }
                    },
                    "400": {
                        "description": "Invalid item data",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/item/{id}": {
            "get": {
                "description": "Retrieves a single item by its ID from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Get a single item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item details",
                        "schema": {
                            "$ref": "#/definitions/storage.Item"
                        }
                    },
                    "400": {
                        "description": "Invalid item ID",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/items": {
            "get": {
                "description": "Retrieves all items from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Get all items",
                "responses": {
                    "200": {
                        "description": "List of items",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/storage.Item"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/transaction/create": {
            "post": {
                "description": "Creates a new transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Create a new transaction",
                "parameters": [
                    {
                        "description": "Transaction information",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.Transaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created transaction",
                        "schema": {
                            "$ref": "#/definitions/storage.Transaction"
                        }
                    },
                    "400": {
                        "description": "Invalid transaction data",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/transaction/delete/{id}": {
            "delete": {
                "description": "Soft deletes a transaction from the database",
                "tags": [
                    "transactions"
                ],
                "summary": "Delete a transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid transaction ID",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/transaction/details": {
            "get": {
                "description": "Retrieves transaction details with customer and item information using INNER JOIN",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get transaction details with customer and item information",
                "responses": {
                    "200": {
                        "description": "List of transactions with customer and item details",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/storage.TransactionView"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/transaction/update/{id}": {
            "put": {
                "description": "Updates an existing transaction in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Update an existing transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transaction information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.Transaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated transaction",
                        "schema": {
                            "$ref": "#/definitions/storage.Transaction"
                        }
                    },
                    "400": {
                        "description": "Invalid transaction data",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/transaction/{id}": {
            "get": {
                "description": "Retrieves a single transaction by its ID from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get a single transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction details",
                        "schema": {
                            "$ref": "#/definitions/storage.Transaction"
                        }
                    },
                    "400": {
                        "description": "Invalid transaction ID",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/transactions": {
            "get": {
                "description": "Retrieves all transactions from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get all transactions",
                "responses": {
                    "200": {
                        "description": "List of transactions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/storage.Transaction"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/storage.ResponseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "storage.Customer": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "customer_name": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "storage.Item": {
            "type": "object",
            "properties": {
                "cost": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "sort": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "storage.ResponseError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "error": {}
            }
        },
        "storage.Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "createdAt": {
                    "type": "string"
                },
                "customerID": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "itemID": {
                    "type": "integer"
                },
                "qty": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "storage.TransactionView": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "integer"
                },
                "customer_name": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "item_id": {
                    "type": "integer"
                },
                "item_name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "qty": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}